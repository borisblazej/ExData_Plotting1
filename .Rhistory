material_not <- not_anonymized %>% select(c(3:4,6:7,13:15,22:24)) %>%
rename('Text.anonym' = 'Artikel Beschreibung', Konto_1 = 'BN-WG1', Konto_2 = 'BN-WG2',
Konto_3 = 'BN-WG3') %>% group_by(Artikelnummer) %>%
summarise(Text.anonym = first(Text.anonym), Preiseinheit = first(Preiseinheit),
Waehrung = first(Bestellungswährung), Mengeneinheit = first(Mengeneinheit),
Material = first(Warengruppenschlüssel), Materialname = first(Warengruppenname),
Konto_1 = first(Konto_1), Konto_2 = first(Konto_2),
Konto_3 = first(Konto_3)) %>%
digest(Text.anonym, algo = "crc32")
material_not$Text.anonym <- digest(material_not$Text.anonym, algo = "crc32")
material_not$Text.anonym <- anonymize(material_not$Text.anonym, algo = "crc32")
# Materialstamm
material_not <- not_anonymized %>% select(c(3:4,6:7,13:15,22:24)) %>%
rename('Text.anonym' = 'Artikel Beschreibung', Konto_1 = 'BN-WG1', Konto_2 = 'BN-WG2',
Konto_3 = 'BN-WG3') %>% group_by(Artikelnummer) %>%
summarise(Text.anonym = first(Text.anonym), Preiseinheit = first(Preiseinheit),
Waehrung = first(Bestellungswährung), Mengeneinheit = first(Mengeneinheit),
Material = first(Warengruppenschlüssel), Materialname = first(Warengruppenname),
Konto_1 = first(Konto_1), Konto_2 = first(Konto_2),
Konto_3 = first(Konto_3))
material_not$Text.anonym <- anonymize(material_not$Text.anonym, algo = "crc32")
anonymize <- function(x, algo="crc32"){
unq_hashes <- vapply(unique(x), function(object) digest(object, algo=algo), FUN.VALUE="", USE.NAMES=TRUE)
unname(unq_hashes[x])
}
# Materialstamm
material_not <- not_anonymized %>% select(c(3:4,6:7,13:15,22:24)) %>%
rename('Text.anonym' = 'Artikel Beschreibung', Konto_1 = 'BN-WG1', Konto_2 = 'BN-WG2',
Konto_3 = 'BN-WG3') %>% group_by(Artikelnummer) %>%
summarise(Text.anonym = first(Text.anonym), Preiseinheit = first(Preiseinheit),
Waehrung = first(Bestellungswährung), Mengeneinheit = first(Mengeneinheit),
Material = first(Warengruppenschlüssel), Materialname = first(Warengruppenname),
Konto_1 = first(Konto_1), Konto_2 = first(Konto_2),
Konto_3 = first(Konto_3))
material_not$Text.anonym <- anonymize(material_not$Text.anonym, algo = "crc32")
# Materialstamm
material_not <- not_anonymized %>% select(c(3:4,6:7,13:15,22:24)) %>%
rename('Text.anonym' = 'Artikel Beschreibung', Konto_1 = 'BN-WG1', Konto_2 = 'BN-WG2',
Konto_3 = 'BN-WG3') %>% group_by(Artikelnummer) %>%
summarise(Text.anonym = first(Text.anonym), Preiseinheit = first(Preiseinheit),
Waehrung = first(Bestellungswährung), Mengeneinheit = first(Mengeneinheit),
Material = first(Warengruppenschlüssel), Materialname = first(Warengruppenname),
Konto_1 = first(Konto_1), Konto_2 = first(Konto_2),
Konto_3 = first(Konto_3))
material_not$Text.anonym <- anonymize(material_not$Text.anonym, algo = "crc32")
# Materialstamm
material_not <- not_anonymized %>% select(c(3:4,6:7,13:15,22:24)) %>%
rename('Text.anonym' = 'Artikel Beschreibung', Konto_1 = 'BN-WG1', Konto_2 = 'BN-WG2',
Konto_3 = 'BN-WG3') %>% group_by(Artikelnummer) %>%
summarise(Text.anonym = first(Text.anonym), Preiseinheit = first(Preiseinheit),
Waehrung = first(Bestellungswährung), Mengeneinheit = first(Mengeneinheit),
Material = first(Warengruppenschlüssel), Materialname = first(Warengruppenname),
Konto_1 = first(Konto_1), Konto_2 = first(Konto_2),
Konto_3 = first(Konto_3))
material_not$Text.anonym <- anonymize(material_not$Text.anonym, algo = "crc32")
dimMaterial <- material_not
write.csv(dimMaterial, file="Materialstamm.csv")
# Lieferantenstamm
LinkedSupplierID <- not_anonymized %>% select(c(1:2)) %>%
rename(ID = "Lieferantennummer", Name = Lieferantenname) %>%
distinct(ID)
library(tidyverse)
library(readxl)
library(digest)
anonymize <- function(x, algo="crc32"){
unq_hashes <- vapply(unique(x), function(object) digest(object, algo=algo), FUN.VALUE="", USE.NAMES=TRUE)
unname(unq_hashes[x])
}
not_anonymized <- read_excel("C:/Users/Boris/Documents/MANN_120807_BestellDaten_vf.xlsx",
col_types = c("numeric", "text", "text",
"text", "numeric", "numeric", "text",
"numeric", "numeric", "text", "numeric",
"date", "blank", "text", "text",
"text", "text", "text", "numeric",
"text", "numeric", "text", "text",
"numeric", "numeric", "text", "numeric",
"blank", "blank", "blank", "blank",
"blank", "numeric", "text", "text",
"text", "text"))
# Delet blank/unnecessary columns
not_anonymized <- not_anonymized %>% select(-c(18:20,23:25))
# Lieferantenstamm
LinkedSupplierID <- not_anonymized %>% select(c(1:2)) %>%
rename(ID = "Lieferantennummer", Name = Lieferantenname) %>%
distinct(ID)
# Lieferantenstamm
LinkedSupplierID <- not_anonymized %>% select(c(1:2)) %>%
rename(Lieferantennummer = "Lieferant ID", Name = Lieferantenname) %>%
distinct(ID)
mock_supplier <- read_csv("mock_supplier.csv")
mock_supplier <- read_csv("mock_supplier.csv")
supplier_count <- nrow(LinkedSupplierID)
# Lieferantenstamm
LinkedSupplierID <- not_anonymized %>% select(c(1:2)) %>%
rename(Lieferantennummer = "Lieferant ID", Name = Lieferantenname) %>%
distinct(Lieferantennummer)
mock_supplier <- read_csv("mock_supplier.csv")
supplier_count <- nrow(LinkedSupplierID)
dimSupplier <- cbind("Lieferantennummer" = LinkedSupplierID$ID,mock_supplier[1:supplier_count,])
dimSupplier <- cbind("Lieferantennummer" = LinkedSupplierID$Lieferantennummer,
mock_supplier[1:supplier_count,])
dimSupplier <- cbind("Lieferantennummer" = LinkedSupplierID$Lieferantennummer,
mock_supplier[1:supplier_count,])
write.csv(dimSupplier, file="Lieferantenstamm.csv")
View(dimSupplier)
orders <- not_anonymized %>% select(-c(2,4,6:7,13:15,22:24))
View(orders)
unique(orders$Bestellungsnummer)
str(orders)
length(unique(orders$Bestellungsnummer))
length(unique(orders))
length(orders)
dim(orders)
length(unique(orders$Bestellpositionsnummer))
length(unique(orders$Incoterms))
length(unique(orders$Bestellart))
unique(orders$Bestellart)
filter(orders, Bestellart == "EUR")
unique(orders$Nettobedingung)
unique(orders$Skonto)
unique(orders$BN-Loc)
unique(orders$`BN-Loc`)
View(not_anonymized)
orders <- not_anonymized %>% select(-c(2,4,6:7,13:15,21:24))
orders <- not_anonymized %>% select(-c(2,4,6:7,13:15,21:25))
write.csv(orders, file="Bestelldaten.csv")
summary(orders$Bestellbuchungsdatum)
hist(orders$Bestellbuchungsdatum)
hist(orders$Bestellbuchungsdatum, breaks=10)
View(not_anonymized)
View(not_anonymized)
unique(not_anonymized$Bestellungswährung)
library(readr)
Lieferantenstamm <- read_csv("Lieferantenstamm.csv")
View(Lieferantenstamm)
Lieferantenstamm_neu <- Lieferantenstamm
Lieferantenstamm_neu[which(Lieferantenstamm_neu$Land == "UnitedStates"),]$Hauswaehrung <- "USD"
Lieferantenstamm_neu[which(Lieferantenstamm_neu$Land == "United States"),]$Hauswaehrung <- "USD"
Lieferantenstamm_neu$Hauswaehrung <- "EUR"
View(Lieferantenstamm_neu)
Lieferantenstamm_neu[which(Lieferantenstamm_neu$Land == "United States"),]$Hauswaehrung <- "USD"
unique(Lieferantenstamm_neu$Land)
Lieferantenstamm_neu[which(Lieferantenstamm_neu$Land == "United Kingdom"),]$Hauswaehrung <- "USD"
Lieferantenstamm_neu %>% rename(Bestellwaehrung = Hauswaehrung)
write.csv(Lieferantenstamm_neu, file = "Lieferantenstamm2.csv")
setwd("~/004_Projekte/001_LEARN/2019_data-science/04ExploratoryAnalysis/W1_Quiz")
zipUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipFile <- "exdata_data_household_power_consumption.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
# unzip zip file containing data if data directory doesn't already exist
dataPath <- "data"
if (!file.exists(dataPath)) {
unzip(zipFile)
}
zipFile <- "exdata_data_household_power_consumption.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
# unzip zip file containing data if data directory doesn't already exist
extracted <- "household_power_consumption.txt"
if (!file.exists(extracted)) {
unzip(zipFile)
}
zipUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipFile <- "exdata_data_household_power_consumption.zip"
zipUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipFile <- "exdata_data_household_power_consumption.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
# unzip zip file containing data if data directory doesn't already exist
extracted <- "household_power_consumption.txt"
if (!file.exists(extracted)) {
unzip(zipFile)
}
setwd("~/004_Projekte/001_LEARN/2019_data-science/04ExploratoryAnalysis/W1_Quiz/ExData_Plotting1")
library(tidyverse)
library(readr)
zipUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipFile <- "exdata_data_household_power_consumption.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
## unzip zip file containing data if data directory doesn't already exist
extracted <- "household_power_consumption.txt"
if (!file.exists(extracted)) {
unzip(zipFile)
}
## read data
power <- read.csv("./household_power_consumption.txt", sep=";")
file.remove("./exdata_data_household_power_consumption.zip")
file.remove("./household_power_consumption.txt")
start_date <- dmy("1/1/2007")
library(lubridate)
start_date <- dmy("1/1/2007")
start_date <- dmy("1/2/2007")
end_date <- dmy("2/2/2007")
two_months <- power %>% filter(Date >= start_date & Date <= end_date)
two_months <- power %>% subset(Date >= start_date & Date <= end_date)
unique(power$Date)
library(tidyverse)
library(readr)
library(lubridate)
zipUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipFile <- "exdata_data_household_power_consumption.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
## unzip zip file containing data if data directory doesn't already exist
extracted <- "household_power_consumption.txt"
if (!file.exists(extracted)) {
unzip(zipFile)
}
## read data and delete files
power <- read.csv("./household_power_consumption.txt", sep=";",
col_types = cols(Date = col_date(format = "%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S")))
## read data and delete files
power <- read_csv("./household_power_consumption.txt", sep=";",
col_types = cols(Date = col_date(format = "%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S")))
## read data and delete files
power <- read_csv("./household_power_consumption.txt",
col_types = cols(Date = col_date(format = "%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S")))
## read data and delete files
power <- read_delim("household_power_consumption.txt", ";",
escape_double = FALSE,
col_types = cols(Date = col_date(format = "%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S")),
trim_ws = TRUE)
file.remove("./exdata_data_household_power_consumption.zip")
file.remove("./household_power_consumption.txt")
start_date <- dmy("1/2/2007")
end_date <- dmy("2/2/2007")
two_months <- power %>% subset(Date >= start_date & Date <= end_date)
two_days <- power %>% subset(Date >= start_date & Date <= end_date)
rm("power")
with(two_days, hist(Global_active_power))
## Generate the plot
with(two_days, hist(Global_active_power, xlab = "Global Active Power (kilowatts)",
ylab = "Frequency"))
## Generate the plot
with(two_days, hist(Global_active_power, xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power"))
## Generate the plot
with(two_days, hist(Global_active_power, xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power",
col = "red"))
## Generate the plot
with(two_days, hist(Global_active_power, xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power",
col = "red"))
## Seave the plot to a png file
dev.copy(device = "png", filename = "plot1.png", width = 480, height = 480)
## Generate the plot
with(two_days, hist(Global_active_power, xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power",
col = "red"))
## Seave the plot to a png file
dev.copy(device = png, filename = "plot1.png", width = 480, height = 480)
dev.off()
# Explorartory Data ANalysis, Week 1 Project
library(tidyverse)
library(readr)
library(lubridate)
## Download original dataset
zipUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipFile <- "exdata_data_household_power_consumption.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
## unzip zip file containing data if data directory doesn't already exist
extracted <- "household_power_consumption.txt"
if (!file.exists(extracted)) {
unzip(zipFile)
}
## read data and delete files
power <- read_delim("household_power_consumption.txt", ";",
escape_double = FALSE,
col_types = cols(Date = col_date(format = "%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S")),
trim_ws = TRUE)
file.remove("./exdata_data_household_power_consumption.zip")
file.remove("./household_power_consumption.txt")
## subset data and free memory
start_date <- dmy("1/2/2007")
end_date <- dmy("2/2/2007")
two_days <- power %>% subset(Date >= start_date & Date <= end_date)
rm("power")
## Generate the plot
with(two_days, hist(Global_active_power, xlab = "Global Active Power (kilowatts)",
ylab = "Frequency", main = "Global Active Power",
col = "red"))
## Seave the plot to a png file
dev.copy(device = png, filename = "plot1.png", width = 480, height = 480)
dev.off()
# Explorartory Data ANalysis, Week 1 Project
library(tidyverse)
library(readr)
library(lubridate)
## Download original dataset
zipUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipFile <- "exdata_data_household_power_consumption.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
## unzip zip file containing data if data directory doesn't already exist
extracted <- "household_power_consumption.txt"
if (!file.exists(extracted)) {
unzip(zipFile)
}
## read data and delete files
power <- read_delim("household_power_consumption.txt", ";",
escape_double = FALSE,
col_types = cols(Date = col_date(format = "%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S")),
trim_ws = TRUE)
file.remove("./exdata_data_household_power_consumption.zip")
file.remove("./household_power_consumption.txt")
## subset data and free memory
start_date <- dmy("1/2/2007")
end_date <- dmy("2/2/2007")
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = Date + Time)
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = Date + Time)
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = strptime(Date) + strptime(Time))
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = strptime(Date, format = "%Y-%m-%d %H:%M:%S") +
strptime(Time, format = "%Y-%m-%d %H:%M:%S"))
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = ymd(Date) + hms(Time))
two_days$Date[1]
ymd(two_days$Date[1])
ymd(two_days$Time[1])
ymd(two_days$Time[2])
two_days$Time[1]
hms(two_days$Time[1])
hms(two_days$Time[2])
ymd(two_days$Date[1]) + hms(two_days$Time[1])
ymd(two_days$Date[2]) + hms(two_days$Time[2])
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = ymd(Date) + hms(Time, tz="Europe/Berlin"))
two_days$Datetime
ymd(two_days$Date[2]) + hms(two_days$Time[2], tz="Europe/Berlin")
ymd(two_days$Date[3]) + hms(two_days$Time[3], tz="Europe/Berlin")
ymd(two_days$Date[3]) + hms(two_days$Time[3], tz="Germany/Berlin")
ymd(two_days$Date[3]) + hms(two_days$Time[3])
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = ymd(Date) + hms(Time))
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = ymd_hms(ymd(Date) + hms(Time)))
## Generate plot2
with(two_days, lines(x=Datetime, y=Global_active_power,
ylab = "Global Active Power (kilowatts)"))
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = ymd_hms(ymd(Date) + hms(Time)))
## Generate plot2
with(two_days, lines(x=Datetime, y=Global_active_power,
ylab = "Global Active Power (kilowatts)"))
## Generate plot2
with(two_days, lines(x=Datetime, y=Global_active_power,
ylab = "Global Active Power (kilowatts)"))
## Generate plot2
with(two_days, plot(x=Datetime, y=Global_active_power, type =l,
ylab = "Global Active Power (kilowatts)"))
## Generate plot2
with(two_days, plot(type = "n", ylab = "Global Active Power (kilowatts)"))
## Generate plot2
with(two_days, plot(x=Datetime, y=Global_active_power, type ="n",
ylab = "Global Active Power (kilowatts)"))
lines(x=Datetime, y=Global_active_power, type ="l")
with(two_days, lines(x=Datetime, y=Global_active_power, type ="l"))
## Generate plot2
with(two_days, plot(x=Datetime, y=Global_active_power, type ="l",
ylab = "Global Active Power (kilowatts)"))
par()
par$box
par(xpd = NA)
## Generate plot2
with(two_days, plot(x=Datetime, y=Global_active_power, type ="l",
ylab = "Global Active Power (kilowatts)"))
## Seave the plot to a png file
dev.copy(device = png, filename = "plot2.png", width = 480, height = 480)
dev.off()
## Generate plot2
with(two_days, plot(x=Datetime, y=Global_active_power, type ="l", xlab=""
ylab = "Global Active Power (kilowatts)"))
## Generate plot2
with(two_days, plot(x=Datetime, y=Global_active_power, type ="l", xlab="",
ylab = "Global Active Power (kilowatts)"))
# Explorartory Data ANalysis, Week 1 Project
library(tidyverse)
library(readr)
library(lubridate)
## Download original dataset
zipUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipFile <- "exdata_data_household_power_consumption.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
## unzip zip file containing data if data directory doesn't already exist
extracted <- "household_power_consumption.txt"
if (!file.exists(extracted)) {
unzip(zipFile)
}
## read data and delete files
power <- read_delim("household_power_consumption.txt", ";",
escape_double = FALSE,
col_types = cols(Date = col_date(format = "%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S")),
trim_ws = TRUE)
file.remove("./exdata_data_household_power_consumption.zip")
file.remove("./household_power_consumption.txt")
## subset data and free memory
start_date <- dmy("1/2/2007")
end_date <- dmy("2/2/2007")
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = ymd_hms(ymd(Date) + hms(Time)))
rm("power")
## Generate plot2
with(two_days, plot(x=Datetime, y=Global_active_power, type ="l", xlab="",
ylab = "Global Active Power (kilowatts)"))
## Seave the plot to a png file
dev.copy(device = png, filename = "plot2.png", width = 480, height = 480)
dev.off()
## Generate plot3
### Line 1
with(two_days, plot(x=Datetime, y=Sub_metering_1, type ="l", xlab="",
ylab = "Energy Submetering"))
### Line 1 -> black
with(two_days, plot(x=Datetime, y=Sub_metering_2, type ="l",
color = "red"))
### Line 1 -> black
with(two_days, line(x=Datetime, y=Sub_metering_2, type ="l",
col = "red"))
## Generate plot3
### Line 1 -> black
with(two_days, plot(x=Datetime, y=Sub_metering_1, type ="l", xlab="",
ylab = "Energy Submetering"))
### Line 1 -> black
with(two_days, line(x=Datetime, y=Sub_metering_2, col = "red"))
## Generate plot3
### Line 1 -> black
with(two_days, plot(x=Datetime, y=Sub_metering_1, type ="l", xlab="",
ylab = "Energy Submetering"))
### Line 1 -> black
with(two_days, lines(x=Datetime, y=Sub_metering_2, col = "red"))
### Line 3 -> blue
with(two_days, lines(x=Datetime, y=Sub_metering_3, col = "blue"))
with(two_days, plot(x=Datetime, y=Sub_metering_1, type ="l", xlab="",
ylab = "Energy Submetering"))
### Line 2 -> red
with(two_days, lines(x=Datetime, y=Sub_metering_2, col = "red"))
### Line 3 -> blue
with(two_days, lines(x=Datetime, y=Sub_metering_3, col = "blue"))
### Legend
legend("topright", col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
### Legend
legend("topright", col = c("black", "red", "blue"), lty=1, lwd=1
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
### Legend
legend("topright", col = c("black", "red", "blue"), lty=1, lwd=1,
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# Explorartory Data ANalysis, Week 1 Project
library(tidyverse)
library(readr)
library(lubridate)
## Download original dataset
zipUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zipFile <- "exdata_data_household_power_consumption.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
## unzip zip file containing data if data directory doesn't already exist
extracted <- "household_power_consumption.txt"
if (!file.exists(extracted)) {
unzip(zipFile)
}
## read data and delete files
power <- read_delim("household_power_consumption.txt", ";",
escape_double = FALSE,
col_types = cols(Date = col_date(format = "%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S")),
trim_ws = TRUE)
file.remove("./exdata_data_household_power_consumption.zip")
file.remove("./household_power_consumption.txt")
## subset data and free memory
start_date <- dmy("1/2/2007")
end_date <- dmy("2/2/2007")
two_days <- power %>% subset(Date >= start_date & Date <= end_date) %>%
mutate(Datetime = ymd_hms(ymd(Date) + hms(Time)))
rm("power")
## Generate plot3
### Line 1 -> black
with(two_days, plot(x=Datetime, y=Sub_metering_1, type ="l", xlab="",
ylab = "Energy Submetering"))
### Line 2 -> red
with(two_days, lines(x=Datetime, y=Sub_metering_2, col = "red"))
### Line 3 -> blue
with(two_days, lines(x=Datetime, y=Sub_metering_3, col = "blue"))
### Legend
legend("topright", col = c("black", "red", "blue"), lty=1, lwd=1,
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Seave the plot to a png file
dev.copy(device = png, filename = "plot3.png", width = 480, height = 480)
dev.off()
